local Button = require "main.module.gui_button"

local function create_sprite_button(node, released_animation, callback)
	return Button.create(node, callback, "sprite", hash(released_animation), hash(released_animation.."2"))
end

local function set_icon(self, icon_name)
	local node = gui.get_node("icon_box")
	if icon_name == "sun" then
		icon_name = "ikon_matahari"
	elseif icon_name == "moon" then
		icon_name = "ikon_bulan"
	elseif icon_name == "earth" then
		icon_name = "ikon_bumi"
	elseif icon_name == "rocket" then
		icon_name = "ikon_roketpedia"
	elseif icon_name == "satellite" then
		icon_name = "ikon_satelit"
	end
	gui.play_flipbook(node, icon_name)
end

local function is_game_pause(self, enable)
	self.game_pause = enable
	gui.set_enabled(self.popup_exit_node, enable)
	if enable then
		msg.post("game:/go_rocket", "release_input_focus")
	else
		msg.post("game:/go_rocket", "acquire_input_focus")
	end
	msg.post("game:/go_game#script", "game_pause", {is_pause = enable})
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.score_text = gui.get_node("score_text")
	self.coin_text = gui.get_node("coin_text")
	gui.set_text(self.score_text, score)
	gui.set_text(self.coin_text, coin_collected)

	self.popup_exit_node = gui.get_node("exit/popup_box")
	gui.set_position(self.popup_exit_node, vmath.vector3(240, 445, 0))
	gui.set_scale(self.popup_exit_node, vmath.vector3(0.1, 0.1, 1))
	is_game_pause(self, false)

	self.yes_btn = create_sprite_button(gui.get_node("exit/yes_btn"), "button_ya", function()
		msg.post(".", "release_input_focus")
		msg.post("/go_game", "release_input_focus")
		msg.post("/go_gameover#gameover", "reset_data")
		msg.post("loader:/go_loader#script", "goto_menu")
	end)
	self.no_btn = create_sprite_button(gui.get_node("exit/no_btn"), "button_tidak", function()
		gui.animate(self.popup_exit_node, "scale", vmath.vector3(0.1,0.1,1), gui.EASING_INBACK, 0.3, 0, function()
			is_game_pause(self, false)
		end)
	end)
	
end

function on_message(self, message_id, message, sender)
	-- from game.script
	if message_id == hash("achivement_update") then
		local node = gui.get_node("achv_box")
		gui.animate(node, "position.y", 750, gui.EASING_OUTBACK, 0.4, 0, function()
			gui.animate(node, "position.y", 870, gui.EASING_INBACK, 0.5, 2)
		end)
		set_icon(self, message.data)
		print("unlocked",message.data)
	end
	-- from coin.script
	if message_id == hash("coin_update") then
		gui.set_text(self.coin_text, coin_collected)
	end
	-- from game.script
	if message_id == hash("score_update") then
		gui.set_text(self.score_text, score)
	end
	-- from game.script
	if message_id == hash("game_end") then
		self.game_end = message.is_game_end
	end
end

function on_input(self, action_id, action)
	if (action_id == hash("esc") or action_id == hash("back")) and action.pressed and
	not self.game_pause and not self.game_end then
		is_game_pause(self, true)
		gui.animate(self.popup_exit_node, "scale", vmath.vector3(1,1,1), gui.EASING_OUTBACK, 0.45)
	end
	self.yes_btn.on_input(action_id, action)
	self.no_btn.on_input(action_id, action)
end